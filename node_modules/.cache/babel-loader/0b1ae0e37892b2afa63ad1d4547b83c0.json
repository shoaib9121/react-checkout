{"ast":null,"code":"var _jsxFileName = \"/Users/SAhmed12/dev/js/toptal-checkout-react/src/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./Checkout.module.css\";\nimport { LoadingIcon } from \"./Icons\";\nimport { getProducts } from \"./dataService\";\nimport React, { useEffect } from \"react\"; // You are provided with an incomplete <Checkout /> component.\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n// Demo video - You can view how the completed functionality should look at: https://drive.google.com/file/d/1o2Rz5HBOPOEp9DlvE9FWnLJoW9KUp5-C/view?usp=sharing\n// Once the <Checkout /> component is mounted, load the products using the getProducts function.\n// Once all the data is successfully loaded, hide the loading icon.\n// Render each product object as a <Product/> component, passing in the necessary props.\n// Implement the following functionality:\n//  - The add and remove buttons should adjust the ordered quantity of each product\n//  - The add and remove buttons should be enabled/disabled to ensure that the ordered quantity can’t be negative and can’t exceed the available count for that product.\n//  - The total shown for each product should be calculated based on the ordered quantity and the price\n//  - The total in the order summary should be calculated\n//  - For orders over $1000, apply a 10% discount to the order. Display the discount text only if a discount has been applied.\n//  - The total should reflect any discount that has been applied\n//  - All dollar amounts should be displayed to 2 decimal places\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Product = _ref => {\n  let {\n    id,\n    name,\n    availableCount,\n    price,\n    orderedQuantity,\n    total\n  } = _ref;\n\n  const incrementQuantity = () => {\n    orderedQuantity++;\n  };\n\n  const decrementQuantity = () => {\n    orderedQuantity--;\n  };\n\n  const getPrice = () => price * orderedQuantity;\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: availableCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\"$\", getPrice()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: orderedQuantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\"$\", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.actionButton,\n        disabled: orderedQuantity > availableCount,\n        onClick: incrementQuantity,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.actionButton,\n        disabled: !orderedQuantity,\n        onClick: decrementQuantity,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Product;\n\nconst Checkout = () => {\n  _s();\n\n  const [products, setProducts] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isDiscount, setIsDiscount] = React.useState(false);\n  useEffect(() => {\n    fetchProducts();\n  });\n\n  const fetchProducts = async () => {\n    setIsLoading(true);\n\n    try {\n      const data = await getProducts();\n\n      if (data) {\n        setProducts(data);\n        isDiscountAvailable();\n      }\n    } catch (_e) {\n      console.log(_e);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getOrderTotal = () => {\n    let som = products === null || products === void 0 ? void 0 : products.reduce((sum, b) => sum + b, 0);\n    return som.toFixed(2) || 0;\n  };\n\n  const isDiscountAvailable = () => {\n    setIsDiscount(products.some(item => item.price >= 1000));\n  };\n\n  const applyDiscountOnTotal = () => {\n    let orderTotal = getOrderTotal();\n\n    if (isDiscount) {\n      let discount = orderTotal * 0.1;\n      orderTotal = orderTotal - discount;\n    }\n\n    return orderTotal;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: styles.header,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Electro World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"# Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: !!products.length && products.map((product, index) => {\n            return /*#__PURE__*/_jsxDEV(Product, { ...product\n            }, index + product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Order summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), isDiscount && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Discount: $ \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total: $ \", !!products.length && applyDiscountOnTotal()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"xjqoEraQlVFiaC8BFh+dCHVXfpM=\");\n\n_c2 = Checkout;\nexport default Checkout;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Product\");\n$RefreshReg$(_c2, \"Checkout\");","map":{"version":3,"names":["styles","LoadingIcon","getProducts","React","useEffect","Product","id","name","availableCount","price","orderedQuantity","total","incrementQuantity","decrementQuantity","getPrice","actionButton","Checkout","products","setProducts","useState","isLoading","setIsLoading","isDiscount","setIsDiscount","fetchProducts","data","isDiscountAvailable","_e","console","log","getOrderTotal","som","reduce","sum","b","toFixed","some","item","applyDiscountOnTotal","orderTotal","discount","header","table","length","map","product","index"],"sources":["/Users/SAhmed12/dev/js/toptal-checkout-react/src/Checkout.js"],"sourcesContent":["import styles from \"./Checkout.module.css\";\nimport { LoadingIcon } from \"./Icons\";\nimport { getProducts } from \"./dataService\";\nimport React, { useEffect } from \"react\";\n\n// You are provided with an incomplete <Checkout /> component.\n// You are not allowed to add any additional HTML elements.\n// You are not allowed to use refs.\n\n// Demo video - You can view how the completed functionality should look at: https://drive.google.com/file/d/1o2Rz5HBOPOEp9DlvE9FWnLJoW9KUp5-C/view?usp=sharing\n\n// Once the <Checkout /> component is mounted, load the products using the getProducts function.\n// Once all the data is successfully loaded, hide the loading icon.\n// Render each product object as a <Product/> component, passing in the necessary props.\n// Implement the following functionality:\n//  - The add and remove buttons should adjust the ordered quantity of each product\n//  - The add and remove buttons should be enabled/disabled to ensure that the ordered quantity can’t be negative and can’t exceed the available count for that product.\n//  - The total shown for each product should be calculated based on the ordered quantity and the price\n//  - The total in the order summary should be calculated\n//  - For orders over $1000, apply a 10% discount to the order. Display the discount text only if a discount has been applied.\n//  - The total should reflect any discount that has been applied\n//  - All dollar amounts should be displayed to 2 decimal places\n\nconst Product = ({\n  id,\n  name,\n  availableCount,\n  price,\n  orderedQuantity,\n  total,\n}) => {\n  const incrementQuantity = () => {\n    orderedQuantity++;\n  };\n\n  const decrementQuantity = () => {\n    orderedQuantity--;\n  };\n\n  const getPrice = () => price * orderedQuantity;\n\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{name}</td>\n      <td>{availableCount}</td>\n      <td>${getPrice()}</td>\n      <td>{orderedQuantity}</td>\n      <td>${total}</td>\n      <td>\n        <button\n          className={styles.actionButton}\n          disabled={orderedQuantity > availableCount}\n          onClick={incrementQuantity}\n        >\n          +\n        </button>\n        <button\n          className={styles.actionButton}\n          disabled={!orderedQuantity}\n          onClick={decrementQuantity}\n        >\n          -\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nconst Checkout = () => {\n  const [products, setProducts] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isDiscount, setIsDiscount] = React.useState(false);\n\n  useEffect(() => {\n    fetchProducts();\n  });\n\n  const fetchProducts = async () => {\n    setIsLoading(true);\n    try {\n      const data = await getProducts();\n      if (data) {\n        setProducts(data);\n        isDiscountAvailable();\n      }\n    } catch (_e) {\n      console.log(_e);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getOrderTotal = () => {\n    let som = products?.reduce((sum, b) => sum + b, 0);\n    return som.toFixed(2) || 0;\n  };\n\n  const isDiscountAvailable = () => {\n    setIsDiscount(products.some((item) => item.price >= 1000));\n  };\n\n  const applyDiscountOnTotal = () => {\n    let orderTotal = getOrderTotal();\n\n    if (isDiscount) {\n      let discount = orderTotal * 0.1;\n      orderTotal = orderTotal - discount;\n    }\n\n    return orderTotal;\n  };\n\n  return (\n    <div>\n      <header className={styles.header}>\n        <h1>Electro World</h1>\n      </header>\n      <main>\n        {isLoading && <LoadingIcon />}\n\n        <table className={styles.table}>\n          <thead>\n            <tr>\n              <th>Product ID</th>\n              <th>Product Name</th>\n              <th># Available</th>\n              <th>Price</th>\n              <th>Quantity</th>\n              <th>Total</th>\n              <th></th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {!!products.length &&\n              products.map((product, index) => {\n                return <Product key={index + product.id} {...product} />;\n              })}\n          </tbody>\n        </table>\n        <h2>Order summary</h2>\n        {isDiscount && <p>Discount: $ </p>}\n        <p>Total: $ {!!products.length && applyDiscountOnTotal()}</p>\n      </main>\n    </div>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}